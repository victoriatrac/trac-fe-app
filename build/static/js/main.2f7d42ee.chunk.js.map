{"version":3,"sources":["images/arrow-up.svg","components/Weather.js","components/TaskForm.js","components/Task.js","components/Tasks.js","components/Posts.js","components/Mock2.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","ConvertCtoF","celcius","Weather","window","addEventListener","navigator","geolocation","iconImg","document","getElementById","loc","querySelector","tempF","feelsLike","min","max","desc","sunriseDOM","sunsetDOM","apiKey","process","getCurrentPosition","pos","lon","coords","longitude","lat","latitude","axios","get","concat","then","currentRes","_currentRes$data","data","weather","main","sys","name","temp","feels_like","temp_min","temp_max","place","description","sunrise","sunset","iconUrl","sunriseGMT","Date","sunsetGMT","src","textContent","toFixed","toLocaleTimeString","hour","minute","err","console","warn","code","message","timeout","react_default","a","createElement","className","id","alt","arrow","TaskForm","props","form","update","submit","onSubmit","event","preventDefault","for","type","placeholder","value","task","onChange","_event$target","target","Task","items","initialForm","now","checked","Tasks","_useState","useState","_useState2","Object","slicedToArray","tasks","setTasks","_useState3","_useState4","setForm","useEffect","res","log","toConsumableArray","catch","length","map","components_Task","components_TaskForm","objectSpread","defineProperty","Posts","_React$useState","React","_React$useState2","posts","setPosts","post","fact","Mock2","App","components_Weather","components_Tasks","components_Posts","components_Mock2","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2f7d42ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-up.85d215f6.svg\";","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport './components.css'\r\nimport './weather.css'\r\n\r\nimport arrow from '../images/arrow-up.svg'\r\n\r\n// helper function for temp conversion\r\nfunction ConvertCtoF(celcius) {\r\n  const fahrenheit = (celcius * 9) / 5 + 32\r\n  return fahrenheit\r\n}\r\n\r\nfunction Weather() {\r\n  window.addEventListener('load', () => {\r\n    if (navigator.geolocation) {\r\n    \r\n      const iconImg = document.getElementById('weather-icon')\r\n      const loc = document.querySelector('#location')\r\n      const tempF = document.querySelector('#f')\r\n      const feelsLike = document.querySelector('#feels')\r\n      const min = document.querySelector('#min')\r\n      const max = document.querySelector('#max')\r\n      const desc = document.querySelector('#weather-desc')\r\n      const sunriseDOM = document.querySelector('#sunrise')\r\n      const sunsetDOM = document.querySelector('#sunset')\r\n\r\n      const options = {\r\n        timeout: 5000\r\n      }\r\n\r\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY\r\n\r\n      function success(pos) {\r\n        const lon = pos.coords.longitude\r\n        const lat = pos.coords.latitude\r\n\r\n        axios\r\n          .get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`)\r\n          // .all([\r\n          //     axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`),\r\n          //     axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=${apiKey}&units=metric`)\r\n          // ])\r\n          // .then(axios.spread((currentRes, futureRes) => {\r\n          .then((currentRes) => {\r\n\r\n            const { weather, main, sys, name} = currentRes.data\r\n            // const futureWeather = futureRes.data\r\n            \r\n            const { temp, feels_like, temp_min, temp_max } = main\r\n            const place = name\r\n            const { description } = weather[0]\r\n            const { sunrise, sunset } = sys\r\n\r\n            const iconUrl = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${\r\n              weather[0][\"icon\"]\r\n            }.svg`\r\n\r\n            const sunriseGMT = new Date(sunrise * 1000)\r\n            const sunsetGMT = new Date(sunset * 1000)\r\n\r\n            iconImg.src = `${iconUrl}`;\r\n            loc.textContent = `${place}`;\r\n            desc.textContent = `${description}`;\r\n            tempF.textContent = `${ConvertCtoF(temp).toFixed(0)}째F`\r\n            feelsLike.textContent = `Feels like ${ConvertCtoF(feels_like).toFixed(0)}째F`\r\n            max.textContent = `${ConvertCtoF(temp_max).toFixed(0)}째F`\r\n            min.textContent = `${ConvertCtoF(temp_min).toFixed(0)}째F`\r\n            sunriseDOM.textContent = `${sunriseGMT.toLocaleTimeString([], {hour: 'numeric', minute:'2-digit'})}`;\r\n            sunsetDOM.textContent = `${sunsetGMT.toLocaleTimeString([], {hour: 'numeric', minute:'2-digit'})}`;\r\n          })\r\n      }\r\n\r\n      function error(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`)\r\n      }\r\n\r\n      navigator.geolocation.getCurrentPosition(success, error, options)\r\n    }\r\n  \r\n  })\r\n\r\n  return (\r\n    <div className=\"container-tile\">\r\n      <div id=\"top-div\">\r\n        <div id=\"icon-div\">\r\n          <img src=\"\" alt=\"weather-icon\" id=\"weather-icon\" />\r\n          <p id=\"weather-desc\">No information available</p>\r\n        </div>\r\n        <div id=\"loc-desc-div\">\r\n          <div id=\"temp\">\r\n            <div id=\"f\">Error</div>\r\n            <div id=\"feels\">Error</div>\r\n          </div>\r\n          <div id=\"location\">Fetching weather failed</div>\r\n        </div>\r\n      </div>\r\n      <div id=\"bottom-div\">\r\n        <div className=\"bottom-div-div\">\r\n          <div className=\"expected-temps-div\">\r\n            <img src={arrow} alt=\"up-arrow\" id=\"arrow-icon\" className=\"arrow-up\"/>\r\n            <span id=\"min\">Error</span>\r\n          </div>\r\n          <div className=\"expected-temps-div\">\r\n            <img src={arrow} alt=\"down-arrow\" id=\"arrow-icon\" className=\"arrow-down\"/>\r\n            <span id=\"max\">Error</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-div-div\">\r\n          <h4>Sunrise: <span id=\"sunrise\">No info</span></h4>\r\n          <h4>Sunset: <span id=\"sunset\">No info</span></h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather","import React from 'react'\r\nimport './tasks.css'\r\n\r\nfunction TaskForm(props) {\r\n  const { form, update, submit } = props\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target\r\n    update(name, value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    submit()\r\n  }\r\n\r\n  return (\r\n    <form className=\"task-form-container\" onSubmit={handleSubmit}>\r\n      <div className=\"task-form-inputs\">\r\n        <label\r\n          for=\"task\">\r\n          <input\r\n            id=\"task\"\r\n            type=\"text\"\r\n            name=\"task\"\r\n            placeholder=\"add a task\"\r\n            value={form.task}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <div id=\"task-submit\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm","import React from 'react'\r\nimport './tasks.css'\r\n\r\nfunction Task(props) {\r\n  const { items } = props\r\n  \r\n  if (!items) {\r\n    return <p>No tasks to show</p>\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-div\">\r\n      <p>{items.task}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport TaskForm from './TaskForm'\r\nimport Task from './Task'\r\nimport './components.css'\r\nimport './tasks.css'\r\n\r\n\r\nconst initialForm = {\r\n  id: Date.now(),\r\n  task: \"\",\r\n  checked: false\r\n}\r\n\r\nfunction Tasks() {\r\n  const [ tasks, setTasks ] = useState([])\r\n  const [ form, setForm ] = useState(initialForm)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:1234/tasks`)\r\n      // .get(`https://fakeapi.com`)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        setTasks([...tasks, ...res.data])\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  const update = (name, value) => {\r\n    setForm({...form, [name]: value})\r\n  }\r\n\r\n  const submit = () => {\r\n    setTasks([...tasks, form])\r\n    setForm(initialForm)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-tile\" id=\"task-tile\">\r\n      <div id=\"task-top-div\">\r\n        <span id=\"task-header\">To Do</span>\r\n      </div>\r\n      <div id=\"tasks-div\">\r\n        <ul>\r\n          {\r\n            ( tasks.length === 0 ? \"no tasks to display\" :\r\n            tasks.map(task => {\r\n              return (\r\n                <li>\r\n                  <Task\r\n                    id={task.id}\r\n                    items={task}\r\n                  />\r\n                </li>\r\n              )\r\n            }))\r\n          }\r\n      </ul>\r\n      </div>\r\n      <div id=\"task-bottom-div\">\r\n        <TaskForm\r\n          form={form}\r\n          update={update}\r\n          submit={submit}\r\n        />\r\n      </div>     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks","import React from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport './components.css'\r\nimport './posts.css'\r\n\r\nfunction Posts() {\r\n  const [ posts, setPosts ] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(\"https://catfact.ninja/facts\")\r\n      .then((res) => setPosts(res.data.data))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container-tile\" >\r\n      <div id=\"posts-container\">\r\n        <ul className=\"posts\">\r\n            {posts.map((post) => (\r\n                <li className=\"post\">\r\n                  <h3>{post.fact}</h3>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\n// import axios from 'axios'\r\nimport './mock2.css'\r\nimport './components.css'\r\n\r\nfunction Mock2() {\r\n\r\n  return (\r\n    <div className=\"container-tile\">\r\n        <p>poop</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mock2","import './App.css'\r\nimport React from 'react'\r\n\r\nimport Weather from './components/Weather'\r\nimport Tasks from './components/Tasks'\r\nimport Posts from './components/Posts'\r\nimport Mock2 from './components/Mock2'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Weather />\r\n      <Tasks />\r\n      <Posts />\r\n      <Mock2 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}